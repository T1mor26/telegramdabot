import asyncio
import string
from aiogram import Bot, Dispatcher, types

# üîë —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "5754410446:AAEGkNkTL5gB0Bo8w5qwmh5ZfxGyHOeyX4I"

# üëá file_id —Å–≤–æ–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
STICKER_ID = "CAACAgIAAxkBAAEPRx9osv3fEm_YpnmF9di9yNREBJnjxwACuw0AAq9OeUiyCBJMdTHfNjYE"

bot = Bot(token=TOKEN)
dp = Dispatcher()

async def check_message(message: types.Message):
    if not message.text:
        return

    words = message.text.strip().lower().split()

    for word in words:
        # —É–±–∏—Ä–∞–µ–º –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ —Å –∫–æ–Ω—Ü–∞ —Å–ª–æ–≤–∞
        clean_word = word.strip(string.punctuation)

        # —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ '–¥–∞' –∏ '–ø–∏–∑–¥–∞'
        if clean_word in ("–¥–∞", "–ø–∏–∑–¥–∞"):
            await message.reply_sticker(STICKER_ID)
            break

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
dp.message.register(check_message)

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
