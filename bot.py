import asyncio
import string
from io import BytesIO
from aiogram import Bot, Dispatcher
from aiogram.types import Message, BotCommand
from craiyon import Craiyon  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫

# üîë –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "5754410446:AAEGkNkTL5gB0Bo8w5qwmh5ZfxGyHOeyX4I"

# üëá —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å file_id —Å–≤–æ–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
STICKER_ID = "CAACAgIAAxkBAAEPRx9osv3fEm_YpnmF9di9yNREBJnjxwACuw0AAq9OeUiyCBJMdTHfNjYE"

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message()
async def handler(message: Message):
    text = message.text
    if not text:
        return

    # –∫–æ–º–∞–Ω–¥–∞ /pic
    if text.startswith("/pic"):
        prompt = text.replace("/pic", "").strip()
        if not prompt:
            await message.reply("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: /pic –∫–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ")
            return

        await message.reply("‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Craiyon, –ø–æ–¥–æ–∂–¥–∏ 15‚Äì30 —Å–µ–∫—É–Ω–¥...")

        try:
            generator = Craiyon()
            # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —Ç.–∫. –±–ª–æ–∫–∏—Ä—É—é—â–∞—è
            result = await asyncio.to_thread(generator.generate, prompt)

            # –±–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
            img = result.images[0]
            bio = BytesIO(img)
            bio.name = "craiyon.png"

            await bot.send_photo(message.chat.id, photo=bio, caption=f"‚ú® {prompt}")

        except Exception as e:
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
        return

    # –µ—Å–ª–∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "–¥–∞" –∏ "–ø–∏–∑–¥–∞"
    words = text.strip().lower().split()
    for word in words:
        clean = word.strip(string.punctuation)
        if clean in ("–¥–∞", "–ø–∏–∑–¥–∞"):
            await message.reply_sticker(STICKER_ID)
            break


async def main():
    await bot.set_my_commands([
        BotCommand(command="pic", description="Generate image with Craiyon")
    ])
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
