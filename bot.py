import asyncio
import string
import base64
import aiohttp
from io import BytesIO
from aiogram import Bot, Dispatcher
from aiogram.types import Message, BotCommand, FSInputFile

# üîë —Ç–æ–∫–µ–Ω
TOKEN = "5754410446:AAEGkNkTL5gB0Bo8w5qwmh5ZfxGyHOeyX4I"
STICKER_ID = "CAACAgIAAxkBAAEPRx9osv3fEm_YpnmF9di9yNREBJnjxwACuw0AAq9OeUiyCBJMdTHfNjYE"

bot = Bot(token=TOKEN)
dp = Dispatcher()


@dp.message()
async def handler(message: Message):
    text = message.text
    if not text:
        return

    # –∫–æ–º–∞–Ω–¥–∞ /pic
    if text.startswith("/pic"):
        prompt = text.replace("/pic", "").strip()
        if not prompt:
            await message.reply("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: /pic –∫–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ")
            return

        await message.reply("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É —á–µ—Ä–µ–∑ Craiyon... (–∑–∞–Ω–∏–º–∞–µ—Ç 15‚Äì30 —Å–µ–∫)")

        try:
            async with aiohttp.ClientSession() as session:
                # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ Craiyon API
                async with session.post(
                    "https://backend.craiyon.com/generate",
                    json={"prompt": prompt}
                ) as resp:
                    if resp.status != 200:
                        await message.reply(f"–û—à–∏–±–∫–∞ Craiyon: {resp.status}")
                        return
                    data = await resp.json()

            # Craiyon –æ—Ç–¥–∞—ë—Ç —Å–ø–∏—Å–æ–∫ base64 –∫–∞—Ä—Ç–∏–Ω–æ–∫
            images = data.get("images")
            if not images:
                await message.reply("‚ö†Ô∏è Craiyon –Ω–µ –≤–µ—Ä–Ω—É–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                return

            # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
            img_b64 = images[0]
            img_bytes = base64.b64decode(img_b64)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ñ–∞–π–ª (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫)
            bio = BytesIO(img_bytes)
            bio.name = "image.png"
            await bot.send_photo(message.chat.id, photo=bio, caption=f"‚ú® {prompt}")

        except Exception as e:
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
        return

    # –µ—Å–ª–∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "–¥–∞" –∏ "–ø–∏–∑–¥–∞"
    words = text.strip().lower().split()
    for word in words:
        clean = word.strip(string.punctuation)
        if clean in ("–¥–∞", "–ø–∏–∑–¥–∞"):
            await message.reply_sticker(STICKER_ID)
            break


async def main():
    await bot.set_my_commands([
        BotCommand(command="pic", description="Generate image with Craiyon")
    ])
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
