import asyncio
import string
from aiogram import Bot, Dispatcher, types

# üîë —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "5754410446:AAEGkNkTL5gB0Bo8w5qwmh5ZfxGyHOeyX4I"

# üëá file_id —Ç–≤–æ–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
STICKER_ID = "CAACAgIAAxkBAAEPRx9osv3fEm_YpnmF9di9yNREBJnjxwACuw0AAq9OeUiyCBJMdTHfNjYE"

bot = Bot(token=TOKEN)
dp = Dispatcher()

# ========= –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–¢–ò–ö–ï–†–û–í =========
async def check_message(message: types.Message):
    if not message.text:
        return

    words = message.text.strip().lower().split()

    for word in words:
        clean_word = word.strip(string.punctuation)
        if clean_word in ("–¥–∞", "–ø–∏–∑–¥–∞"):
            await message.reply_sticker(STICKER_ID)
            break

dp.message.register(check_message)

# ========= –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ê–†–¢–ò–ù–û–ö =========
async def send_image(message: types.Message):
    if not message.text.startswith("/–∫–∞—Ä—Ç–∏–Ω–∫–∞"):
        return

    prompt = message.text.replace("/–∫–∞—Ä—Ç–∏–Ω–∫–∞", "").strip()
    if not prompt:
        await message.reply("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å. –ü—Ä–∏–º–µ—Ä:\n/–∫–∞—Ä—Ç–∏–Ω–∫–∞ –∫–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ")
        return

    await message.reply("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É...")

    try:
        # Pollinations.AI —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∫–ª—é—á–∞, –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
        image_url = f"https://image.pollinations.ai/prompt/{prompt.replace(' ', '%20')}"
        await bot.send_photo(message.chat.id, photo=image_url, caption=f"‚ú® –í–æ—Ç —Ç–≤–æ—è –∫–∞—Ä—Ç–∏–Ω–∫–∞: {prompt}")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

dp.message.register(send_image)

# ========= –°–¢–ê–†–¢ =========
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
