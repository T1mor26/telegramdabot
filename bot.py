import asyncio
import string
import urllib.parse
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import BotCommand, Message
from aiogram import Router

# üîë —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "5754410446:AAEGkNkTL5gB0Bo8w5qwmh5ZfxGyHOeyX4I"

# üëá file_id —Ç–≤–æ–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞
STICKER_ID = "CAACAgIAAxkBAAEPRx9osv3fEm_YpnmF9di9yNREBJnjxwACuw0AAq9OeUiyCBJMdTHfNjYE"

bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# --- –°—Ç–∏–∫–µ—Ä-—Ç—Ä–∏–≥–≥–µ—Ä: —Ä–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ "–¥–∞" –∏ "–ø–∏–∑–¥–∞"
@router.message()
async def sticker_trigger(message: Message):
    if not message.text:
        return
    if message.text.startswith("/"):  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        return

    words = message.text.strip().lower().split()
    for word in words:
        clean = word.strip(string.punctuation)
        if clean in ("–¥–∞", "–ø–∏–∑–¥–∞"):
            await message.reply_sticker(STICKER_ID)
            break

# --- –ö–æ–º–∞–Ω–¥–∞ /pic <prompt>
@router.message(Command("pic"))
async def cmd_pic(message: Message):
    prompt = message.text.replace("/pic", "").strip()
    if not prompt:
        await message.reply("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å. –ü—Ä–∏–º–µ—Ä:\n/pic cat in space")
        return

    await message.reply("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É...")
    encoded = urllib.parse.quote_plus(prompt)
    image_url = f"https://image.pollinations.ai/prompt/{encoded}"

    try:
        await bot.send_photo(message.chat.id, photo=image_url, caption=f"‚ú® {prompt}")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")

# --- –°—Ç–∞—Ä—Ç
async def main():
    await bot.set_my_commands([
        BotCommand(command="pic", description="Generate an image from text"),
    ])
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
